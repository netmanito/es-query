#!/bin/bash

## variables to be moved to .env file
source ~/.es-query/.env

## enable bash completion
# not sure if it works out of the bash-completion normal path
# cp es-query_bash_completion ~/.local/share/bash-completion/completions/
source ~/.es-query/es-query_bash_completion

## test URL
HTTPS="https"
function test_url {
  curl -o /dev/null -s -w "%{http_code}\n" -k "https://$URL"
}

if [ "$(test_url)" == "000" ]; then
  HTTPS="http"
fi
## function with jquery
function es_request {
  curl -s -H "Content-Type: application/json" -k -u "$USERNAME":"$PASSWORD" -"$1" "$HTTPS://$URL/$2" | jq
}

## function without jquery
function request {
  curl -s -H "Content-Type: application/json" -k -u "$USERNAME":"$PASSWORD" -"$1" "$HTTPS://$URL/$2"
}

## function GET|PUT|POST with json file
function p_request {
  curl -s -H "Content-Type: application/json" -k -u "$USERNAME":"$PASSWORD" -"$1" "$HTTPS://$URL/$2" -d @"$3" | jq
}

## function set env
function set_env {
  echo "Changing environment credentials to '$QUERY'"
  rm "${HOME}"/.es-query/.env
  ln -s "${HOME}"/.es-query/.env."$QUERY" "${HOME}"/.es-query/.env
  echo "Done ✅"
}

## variables to work in requests
COMMAND=$1
QUERY=$2
if [ -z "$1" ]; then
  COMMAND=""
  echo "Error! Expected some argument ❌"
  echo ""
elif [ -n "$1" ]; then
  COMMAND=$1
  QUERY=$2
fi
OPTION=$3

## options use
case $COMMAND in
GET | get)
  QUERY=$2
  OPTION=$3
  # use query wihtout jq when doing _cat requests 
  if [[ "$QUERY" =~ _cat/.*$ ]]; then
    request XGET "$QUERY"
  elif [ -z "$OPTION" ]; then
    # get request with no options
    es_request XGET "$QUERY"
  else
    # get request with options
    p_request XGET "$QUERY" "$OPTION"
  fi
  ;;
PUT | put)
  # put request needs options
  if [ -z "$OPTION" ]; then
    echo "Error, argument needed"
  else
    p_request "$COMMAND" "$QUERY" "$OPTION"
  fi
  ;;
POST | post)
  # do_option_2
  if [ -z "$OPTION" ]; then
    echo "Error, argument needed"
  else
    p_request "$COMMAND" "$QUERY" "$OPTION"
  fi
  ;;
DELETE | del | delete)
  # do_option_2
  request XDELETE "$QUERY"
  ;;
ENV | env)
  # set environmet
  if [ -z "$QUERY" ]; then
    echo "Showing available connections"
    echo ""
    ENVLIST=$(find ~/.es-query/.env* -exec ls -Gl {} \; | awk {'print $9,$10,$11'})
    echo "$ENVLIST"
    echo ""
  else
    set_env "$QUERY"
  fi
  ;;
help)
  echo "Usage GET PUT POST DELETE ENV"
  ;;
*)
  echo "=============================================="
  echo ""
  echo "Wrong option, use get|put|post|delete|env"
  echo ""
  echo "Elastic Usage:"
  echo ""
  echo "esq get _cat/indices?pretty"
  echo ""
  echo "=============================================="
  echo ""
  echo "Credentials Usage:"
  echo ""
  echo "For setting file ~/.es-query/.env.remote"
  echo "Do: "
  echo ""
  echo "esq env remote"
  echo ""
  echo "=============================================="
  ;;
esac
shift
