#!/bin/bash

## variables to be moved to .env file
# shellcheck source=.env
source .env

## enable bash completion
# cp es-query_bash_completion ~/.local/share/bash-completion/completions/
source ./es-query_bash_completion

## test URL
HTTPS="https"
function test_url {
	curl -o /dev/null -s -w "%{http_code}\n" -k "https://$URL"
}

if [ "$(test_url)" == "000" ]; then
   HTTPS="http"
fi
## function with jquery
function es_request {
  
  curl -s -H "Content-Type: application/json" -k -u $USERNAME:$PASSWORD -$1 "$HTTPS://$URL/$2" |jq 
}

## function without jquery
function request {
  curl -s -H "Content-Type: application/json" -k -u $USERNAME:$PASSWORD -$1 "$HTTPS://$URL/$2" 
}

## function GET|PUT|POST with json file
function p_request {
  curl -s -H "Content-Type: application/json" -k -u $USERNAME:$PASSWORD -$1 "$HTTPS://$URL/$2" -d @$3 |jq 
}

## variables to work in requests
OPT=$1
QUERY=$2
  if [ -z "$1" ]; then
    OPT=""
    echo "error"
  elif [ -n "$1" ]; then
    OPT=$1
    QUERY=$2
  fi
FILE=$3

## options use
  case $OPT in
    GET|get)
     QUERY=$2
     FILE=$3
     if [[ "$QUERY" =~ _cat/.*$ ]]; then
	    request XGET "$QUERY"
     elif [ -z "$FILE" ]; then 
	    # do_option_1
	    #[ -z $QUERY ] && { echo "wrong option"; exit 1; } || esrequest XGET $QUERY |jq 
	    es_request XGET "$QUERY" 
     else
	     p_request XGET "$QUERY" "$FILE"
     fi
     #echo GET
    ;;
    PUT|put)
     # do_option_2
     p_request $OPT $QUERY $FILE
    ;;
    POST|post)
     # do_option_2
     p_request $OPT $QUERY $FILE
    ;;
    DELETE|del|delete)
     # do_option_2
     request XDELETE $QUERY
    ;;
    help)
      echo "Usage GET PUT POST DELETE endpoint"
    ;;
    *)
      echo "wrong option, use GET|PUT|POST|DELETE endpoint"
      echo " ";
      echo "Example usage:";
      echo "es-query GET _cat/indices?pretty";
      echo " ";
    ;;
  esac
  shift
